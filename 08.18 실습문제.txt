1. Blake와 같은 부서에 있는 모든 직원의 사번, 이름, 입사일자 조회
SELECT empno, ename, hiredate FROM emp WHERE deptno = (SELECT deptno FROM emp WHERE ename='BLAKE');

2. SELECT empno, ename, deptno, sal, comm FROM emp
WHERE (sal, comm) IN(SELECT sal, comm FROM emp WHERE deptno=30);
이 쿼리에서 보너스가 null인 사람도 출력될 수 있도록 수정하시오.
SELECT empno, ename, deptno, sal, comm FROM emp
WHERE sal IN(SELECT sal FROM emp WHERE deptno=30) AND (comm IN(SELECT comm FROM emp WHERE deptno=30) OR comm is null); (잘 모르겠다)



3. 평균 급여 이상을 받는 직원들의  사번, 이름을 조회. 단, 급여가 많은 순으로 정렬
SELECT empno, ename FROM emp WHERE sal >= (SELECT avg(sal) FROM emp) ORDER BY sal DESC;


4. 이름에 T자가 들어가는 직원이 근무하는 부서에서 근무하는 직원의 사번, 이름, 급여 조회
SELECT empno, ename, sal FROM emp WHERE deptno IN(SELECT deptno FROM emp WHERE instr(ename, 'T')>0);


5. 부서의 위치가 dallas인 모든 직원에 대해 사번, 이름, 급여, 업무조회
SELECT empno, ename, sal, job FROM emp WHERE deptno = (SELECT deptno FROM dept WHERE loc='DALLAS');

6. King에게 보고하는 모든 직원의 이름과 부서, 업무, 급여를 조회
SELECT ename, deptno, job, sal FROM emp WHERE mgr =(SELECT empno FROM emp WHERE ename='KING');

7. 급여가 30번 부서의 최저급여보다 높은 직원의 사번, 이름, 급여 조회
SELECT empno, ename, sal FROM emp WHERE sal > (SELECT min(sal) FROM emp GROUP BY deptno HAVING deptno=30);

8. 10번부서에서 30번 부서의 직원과 같은 업무를 하는 직원의 이름과 업무를 조회
SELECT ename, job FROM emp WHERE deptno = 10 AND job IN(SELECT DISTINCT job FROM emp WHERE deptno=30);



9. 가장 최근에 입사한 직원의 이름과 부서, 업무, 급여를 조회
SELECT ename, deptno, job, sal FROM emp WHERE hiredate = (SELECT max(hiredate) FROM emp);

************************** JOIN 문제 *********************************
1. Newyork에서 근무하는 직원의 사번, 이름, 업무, 부서명을 조회
SELECT empno, ename, job, emp.deptno FROM emp JOIN dept ON emp.deptno = dept.deptno WHERE dept.loc='NEW YORK';

2. 보너스를 받는 직원에 대해 이름, 부서명, 근무지를 조회
SELECT a.ename, a.deptno, b.loc FROM emp a JOIN dept b ON a.deptno = b.deptno WHERE a.comm > 0;

3. 이름 중간에 L자가 있는 직원의 이름, 업무, 부서명, 근무지를 조회
SELECT a.ename, a.job, b.dname, b.loc FROM emp a JOIN dept b ON a.deptno = b.deptno WHERE instr(a.ename, 'L') >0;

4. 각 직원들에 대해 그들의 관리자보다 먼저 입사한 직원의 이름, 입사일, 
SELECT a.ename, a.hiredate FROM emp a JOIN emp b ON a.mgr=b.empno WHERE a.hiredate < (SELECT b.hiredate FROM emp b WHERE a.mgr=b.empno);

5. 말단사원의 사번, 이름, 업무, 부서번호, 근무지를 조회
SELECT a.empno, a.ename, a.job, a.deptno, b.loc FROM emp a JOIN dept b ON a.deptno = b.deptno 
WHERE (a.empno NOT IN(a.mgr)) 
AND (a.hiredate = (SELECT max(a.hiredate) FROM emp a));



*. 테이블을 생성한다.
CREATE TABLE tblBook(
author varchar2(20),
title varchar2(20)
);

INSERT INTO tblBook VALUES('최주현', '하늘과 땅');
INSERT INTO tblBook VALUES('최주현', '바다');
INSERT INTO tblBook VALUES('유은정', '바다');
INSERT INTO tblBook VALUES('박성우', '문');
INSERT INTO tblBook VALUES('최주현', '문');
INSERT INTO tblBook VALUES('박성우', '천국');
INSERT INTO tblBook VALUES('최지은', '천국');
INSERT INTO tblBook VALUES('최주현', '천국');
INSERT INTO tblBook VALUES('박성우', '고슴도치');
INSERT INTO tblBook VALUES('서금동', '나');

6. 한권의 책에 대해 두명 이상의 작가가 쓴 책을 검색
책이름 작가명 작가명

SELECT DISTINCT a.title, a.author, b.author FROM tblBook a JOIN tblBook b ON a.title = b.title AND a.author != b.author; (잘 모르겠다)

